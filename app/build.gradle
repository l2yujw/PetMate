plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

// local.properties 사용을 위함
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.petmate'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.petmate"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // url 변수 지정
//        buildConfigField "String", "WEATHER_URL", properties['url.weather']

        // api key 변수 지정
//        buildConfigField "String", "WEATHER_API_KEY", properties['api.key']

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
        buildConfig = true
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation 'androidx.activity:activity:1.7.2'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-auth-ktx:21.1.0'
    implementation 'com.android.volley:volley:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // bottom navigation view
    implementation 'com.google.android.material:material:1.0.0-rc01'

    // navigation
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'

    // map sliding pannel
    implementation 'com.sothree.slidinguppanel:library:3.4.0'

    // viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'me.relex:circleindicator:2.1.6'

    // retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // 위치
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // 이미지로딩 라이브러리
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // 파이어베이스
    implementation platform('com.google.firebase:firebase-bom:32.2.2')
    implementation 'com.google.android.gms:play-services-auth:20.2.0'

    // Kakap map api
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/libDaumMapAndroid.jar')

    // KaKao Map API 에서 주변 위치 검색을 위한 요청 라이브러리
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //주변 위치 검색 요청 오류를 해결하기 위해 로그를 확인하는 용도로 추가한 인터셉터 라이브러리
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    // login
    implementation 'com.android.volley:volley:1.2.1'

    //Circle ImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //tensorflow
    implementation 'org.tensorflow:tensorflow-lite:2.4.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'
}